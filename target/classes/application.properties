spring.application.name=project2

# 변경 후 만들어진 결과를 보관하지 않도록 설정
# 캐쉬로 보관하지 말고 전에 있는 결과를 지우고 계속 새로 바꾸는 개념?
spring.thymeleaf.cache=false

# 커넥션 풀(커넥션을 미리 받아 놓는 작업) - HikariPool(스프링부트) , 모델2 에서는 톰캣에서 해줫다
# 데이터베이스 연결 정보 등록
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
spring.datasource.username=c##project2
spring.datasource.password=1234

# DDL : create, alter, drop 구문을 자동으로 실행해주는 설정
# ddl-auto= : create, create-drop, update, validate 의미는 pdf 에있다
spring.jpa.hibernate.ddl-auto=create
# JPA 에서 만들어낸 SQL 구문 보여줘
spring.jpa.show-sql=true
# SQL 구문 이쁘게 보여줘
spring.jpa.properties.hibernate.format_sql=true

# 소셜 로그인
# application-oauth.properties 여기 설정한것도 포함해줘
spring.profiles.include=oauth

# 파일 업로드 처리 (servlet의 @MultipartConfig 활성화)
# 파일 업로드 가능 여부
spring.servlet.multipart.enabled=true
# 업로드된 파일 저장 경로
spring.servlet.multipart.location=c:\\upload
# 한번에 최대 업로드 가능 용량
spring.servlet.multipart.max-request-size=30MB
# 파일 하나의 최대 크기
spring.servlet.multipart.max-file-size=10MB

# 서버의 특정 폴더 변수 설정
com.example.upload.path=c:\\upload